# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
info='GNU C Compiler x64 musl-libc toolchain'
deps='musl kernel-headers bison flex libgmp'
nostrip=true
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
version=9.2.0
source=http://mirrors.kernel.org/gnu/$name/$name-$version/$name-$version.tar.xz
sha512=a12dff52af876aee0fd89a8d09cdc455f35ec46845e154023202392adc164848faf8ee881b59b681b696e27c69fd143a214014db4214db62f9891a1c8365c040
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
binutils_version=2.32
binutils_source=http://mirrors.kernel.org/gnu/binutils/binutils-$binutils_version.tar.xz
binutils_sha512=d326408f12a03d9a61a9de56584c2af12f81c2e50d2d7e835d51565df8314df01575724afa1e43bd0db45cfc9916b41519b67dfce03232aa4978704492a6994a
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
mpfr_version=4.0.2
mpfr_source=http://mpfr.org/mpfr-$mpfr_version/mpfr-$mpfr_version.tar.xz
mpfr_sha512=d583555d08863bf36c89b289ae26bae353d9a31f08ee3894520992d2c26e5683c4c9c193d7ad139632f71c0a476d85ea76182702a98bf08dde7b6f65a54f8b88
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
mpc_version=1.1.0
mpc_source=http://mirrors.kernel.org/gnu/mpc/mpc-$mpc_version.tar.gz
mpc_sha512=72d657958b07c7812dc9c7cbae093118ce0e454c68a585bfb0e2fa559f1bf7c5f49b93906f580ab3f1073e5b595d23c6494d4d76b765d16dde857a18dd239628
# -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

prebuild() {
    # use /lib instead of /lib64
    sed '/m64=/s/lib64/lib/' gcc/config/i386/t-linux64 > tmp ; mv -f tmp gcc/config/i386/t-linux64
    sed 's/lib64/lib/' gcc/config/i386/linux64.h > tmp       ; mv -f tmp gcc/config/i386/linux64.h

    # download and checksum our binutils/libs
    msg 'downloading binutils, libmpfr, libmpc...'

    [ -f "$SOURCES/binutils$DELIM$binutils_version.tar.xz" ] || 
    dlcurl "$binutils_source" "$SOURCES" "binutils$DELIM$binutils_version.tar.xz" &&
    verify_checksum "$SOURCES/binutils$DELIM$binutils_version.tar.xz" "$binutils_sha512"

    [ -f "$SOURCES/mpfr$DELIM$mpfr_version.tar.xz" ] || 
    dlcurl "$mpfr_source" "$SOURCES" "mpfr$DELIM$mpfr_version.tar.xz" &&
    verify_checksum "$SOURCES/mpfr$DELIM$mpfr_version.tar.xz" "$mpfr_sha512"

    [ -f "$SOURCES/mpc$DELIM$mpc_version.tar.gz" ] || 
    dlcurl "$mpc_source" "$SOURCES" "mpc$DELIM$mpc_version.tar.gz" &&
    verify_checksum "$SOURCES/mpc$DELIM$mpc_version.tar.gz" "$mpc_sha512" 

    # extract all
    mkdir -p ../res
    decompress "$SOURCES/binutils$DELIM$binutils_version.tar.xz" | tar -C ../res -xf -
    decompress "$SOURCES/mpfr$DELIM$mpfr_version.tar.xz"         | tar -C ../res -xf -
    decompress "$SOURCES/mpc$DELIM$mpc_version.tar.gz"           | tar -C ../res -xf -

    # create symlinks from the ../res directory
    # gcc expects each lib's folder to be in the build dir named its name
    ln -s ../res/mpfr-$mpfr_version mpfr
    ln -s ../res/mpc-$mpc_version mpc
    # create symlinks to everything from binutils that does not
    # already exist in the gcc dir, (this way gcc components take precedence)
    for i in ../res/binutils-$binutils_version/* ; do
        ln -s "$i" 2>/dev/null ||: # nop exit code if already exists
    done

    # swap DESTDIR and PREFIX
    # export PREFIX="$DESTDIR"
    # export DESTDIR=""
    # export BINDIR="$PREFIX"/bin
    
    # cannot have '.' in library path
    export LIBRARY_PATH="$ROOT/lib:$ROOT/libexec"
}
build() {
    mkdir build
    cd build

    GCC_FLAGS="-fno-align-functions -fno-align-jumps -fno-align-loops -fno-align-labels"
    export CFLAGS="$CFLAGS $GCC_FLAGS"
    export CPPFLAGS="$CPPFLAGS $GCC_FLAGS"
    
    bonsai_configure --path=.. \
        --with-gmp=$PKGS/libgmp \
        --enable-default-pie \
        --enable-default-ssp \
        --enable-checking=release \
        --enable-__cxa_atexit \
        --enable-threads=posix \
        --enable-clocale=gnu \
        --enable-tls \
        --enable-languages=c,c++ \
        --with-system-zlib \
        --disable-multilib \
        --disable-symvers \
        --disable-libmpx \
        --disable-libmudflap \
        --disable-libsanitizer \
        --disable-libgomp \
        --disable-fixed-point \
        --disable-libstdcxx-pch \
        --disable-bootstrap

    bonsai_make
    bonsai_make install
}
postbuild() {
    # symlink cc
    ln -sf gcc $pkg/bin/cc

    # add c99 and c89 for convenience
    >$pkg/bin/c99 printf '%s\n%s\n' '#!/bin/sh' 'gcc -std=c99 "$@"'
    >$pkg/bin/c89 printf '%s\n%s\n' '#!/bin/sh' 'gcc -std=c89 "$@"'
    chmod +x $pkg/bin/*

    # remove triplet directory, (we will not be using it, save 20MB)
    rm -rf $pkg/x86_64-* 2>/dev/null ||:

    # remove java libs
    # (soon to be deprecated and nobody uses them anyway, save 30MB)
    find $pkg -type f -name libgtkpeer.a  -exec rm -f "{}" \;
    find $pkg -type f -name libgjsmalsa.a -exec rm -f "{}" \;
    find $pkg -type f -name libgij.a      -exec rm -f "{}" \;
}
