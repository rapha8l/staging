info='LLVM compiler backend'
version=8.0.1
source=http://github.com/$name/$name-project/releases/download/${name}org-8.0.1/$name-$version.src.tar.xz
deps='cmake samurai python3 libffi zlib'
sha256=44787a6d02f7140f145e2250d56c9f849334e11f9ae379827510ed72f12b75e7
build() {
    mkdir build
    cd build

    # disable our static flags, instead use cmake DYLIB= flags
    #getflags

    # -DBUILD_SHARED_LIBS=OFF \

    cmake .. -G Ninja \
        -DCMAKE_INSTALL_PREFIX=/ \
        -DCMAKE_BUILD_TYPE=Release \
        -DLLVM_TARGETS_TO_BUILD='host;AMDGPU' \
        -DLLVM_HOST_TRIPLE="$(gcc -dumpmachine)" \
        -DLLVM_PARALLEL_COMPILE_JOBS="${jobs:-1}" \
        -DLLVM_BUILD_LLVM_DYLIB=OFF \
        -DLLVM_LINK_LLVM_DYLIB=OFF \
        -DLLVM_INCLUDE_EXAMPLES=OFF \
        -DLLVM_INCLUDE_TESTS=OFF \
        -DLLVM_BUILD_DOCS=OFF \
        -DLLVM_ENABLE_OCAMLDOC=OFF \
        -DLLVM_ENABLE_DOXYGEN=OFF \
        -DLLVM_APPEND_VC_REV=OFF \
        -DLLVM_ENABLE_CXX1Y=ON \
        -DLLVM_ENABLE_FFI=ON \
        -DLLVM_ENABLE_RTTI=ON \
        -DLLVM_INSTALL_UTILS=ON \
        -Wno-dev &&
    ninja -j${JOBS:-1} &&
    ninja install
}
